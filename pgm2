//
//  main.cpp
//  pgm2
//
//  Created by Hameed Hakimi on 2/8/16.
//  Copyright Â© 2016 Hameed Hakimi. All rights reserved.
//

#include <iostream>
#include <fstream>
#include <string>
using namespace std;

struct Account {
	string name;
	string address;
	string city;
	string state;
	string lastPaymentDate;
	int zip;
	string phoneNumber;
	double balance;
};

//	menu
void printOptions()
{
	cout << "Select your option" << endl;
	cout << "1: Enter new records" << endl;
	cout << "2: Search for a record and display it" << endl;
	cout << "3: Search for a record and delete it" << endl;
	cout << "4: Search for a record and change it" << endl;
	cout << "5: Display all records" << endl;
	cout << "6: Exit program" << endl;
	cout << "Option: ";
}

//	fill out the struct attributes
void fillRecord(struct Account &act) 
{
	cout << "Enter Name: ";
	getline(cin, act.name);

	cout << "Enter Address: ";
	getline(cin, act.address);

	cout << "Enter City: ";
	cin >> act.city;

	cout << "Enter State: ";
	cin >> act.state;

	cout << "Enter Zipcode: ";
	cin >> act.zip;

	cout << "Enter Account Balance: ";
	cin >> act.balance;

	while (act.balance < 0) {
		cout << "Negative account balances are not accepted" << endl;
		cout << "Enter Account Balance: ";
		cin >> act.balance;
	}
	//	flush out buffer
	cin.ignore();

	cout << "Enter Date of Last Payment: ";
	getline(cin, act.lastPaymentDate);
}

//	print struct information to file
void printRecord(struct Account &act, fstream &file) 
{
	file << endl;
	file << act.name << endl;
	file << act.address << endl;
	file << act.city << ", " << act.state << " " << act.zip;
	file << act.phoneNumber << endl;
	file << act.balance << endl;
	file << act.lastPaymentDate << endl;
}

int main() {
	// insert code here...
	fstream file;

	file.open("accounts.txt", ios::in | ios::out);

	//test for file access error
	if (file.fail())
	{
		cout << "Error accessing file!";
	}

	Account act;
	int option = 0;

	//	run until sentinel is entered
	while (option != 6)
	{
		string name;
		string buffer;
		printOptions();

		cin >> option;
		cin.ignore();

		// add record
		if (option == 1)
		{
			file.seekg(0, file.end);
			fillRecord(act);

			//	write account information to the file
			printRecord(act, file);

			cout << endl;
		}

		//	search and display record
		if (option == 2)
		{
			//	reset streampos pointer to beginning of file
			file.clear();
			file.seekg(0);

			cout << "What name are you looking for?: ";
			cin >> name;

			bool accountFound = false;

			//	continue searching while text exists in the file
			while (getline(file, buffer))
			{	
				//	the string is found
				if (buffer.find(name) != string::npos)
				{
					accountFound = true;

					//	print the record
					for (int counter = 0; counter < 6; counter++)
					{
						cout << buffer << endl;
						getline(file, buffer);
					}
				}
			}

			//	the record was not found
			if (!accountFound)
			{
				cout << "Account not found" << endl << endl;
			}
		}

		// print all of file
		if (option == 5)
		{
			while (getline(file, buffer))
			{
				cout << buffer << endl;
			}
		}
	}
	

	return 0;
}
